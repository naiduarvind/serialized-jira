
name: test_build_and_release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Instrument Build
        uses: kvrhdn/gha-buildevents@main
        with:
          apikey: ${{ secrets.BUILDEVENTS_APIKEY }}
          dataset: builds
          job-status: ${{ job.status }}

      - run: |
          echo ::set-env name=STEP_ID::0
          echo ::set-env name=STEP_START::$(date +%s)

      - name: Mount Build Cache
        uses: actions/cache@v2
        with:
          path: "/home/runner/.cache/bazel"
          key: bazel

      - run: |
          buildevents step $TRACE_ID $STEP_ID $STEP_START 'Mount Build Cache'

      - run: |
          echo ::set-env name=STEP_ID::1
          echo ::set-env name=STEP_START::$(date +%s)

      - name: Install Bazelisk
        uses: vsco/bazelisk-action@master
        with:
          version: '1.6.1'
          bazel-install-path: './.local/bin'
          os: 'linux'

      - run: |
          buildevents step $TRACE_ID $STEP_ID $STEP_START 'Install Bazelisk'

      - run: |
          echo ::set-env name=STEP_ID::2
          echo ::set-env name=STEP_START::$(date +%s)

      - name: Build Linux Artifact
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bazel build --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64' -- bazel build --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64 //packages/serialized-jira:serialized-jira-linux

      - run: |
          buildevents step $TRACE_ID $STEP_ID $STEP_START 'Build Linux Artifact'

      - run: |
          echo ::set-env name=STEP_ID::3
          echo ::set-env name=STEP_START::$(date +%s)

      - name: Build Mac Artifact
        run: |
          buildevents cmd $TRACE_ID $STEP_ID 'bazel build --platforms=@io_bazel_rules_go//go/toolchain:darwin_amd64' -- bazel build --platforms=@io_bazel_rules_go//go/toolchain:darwin_amd64 //packages/serialized-jira:serialized-jira-mac

      - run: |
          buildevents step $TRACE_ID $STEP_ID $STEP_START 'Build Mac Artifact'

      - run: |
          echo ::set-env name=STEP_ID::4
          echo ::set-env name=STEP_START::$(date +%s)

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 13

      - name: Setup Conventional Commits Plugin
        run: npm install conventional-changelog-conventionalcommits
        working-directory: ./.github/workflows

      - name: Release Artifacts to Github
        working-directory: ./.github/workflows
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: naiduarvind
          GIT_AUTHOR_EMAIL: arvind@thebility.engineer
          GIT_COMMITTER_NAME: naiduarvind
          GIT_COMMITTER_EMAIL: arvind@thebility.engineer
        run: npx semantic-release

      - run: |
          buildevents step $TRACE_ID $STEP_ID $STEP_START 'Release Artifacts to Github'